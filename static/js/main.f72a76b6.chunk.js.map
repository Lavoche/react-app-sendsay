{"version":3,"sources":["components/logo/index.js","components/logo/logo.js","components/spinner/spinner-button/index.js","components/spinner/spinner-button/spinner-button.js","components/login/index.js","components/login/login.js","components/main/main-header/index.js","components/main/main-header/main-header.js","components/main/main-history/index.js","components/main/main-history/main-history.js","components/main/main-editor/main-editor.js","components/main/main-editor/index.js","components/main/main-history/history-dropdown/index.js","components/main/main-history/history-dropdown/history-dropdown.js","components/main/main-footer/index.js","components/main/main-footer/main-footer.js","components/main/index.js","components/main/main.js","service/json-lib/index.js","components/spinner/spinner-loading/index.js","components/spinner/spinner-loading/spinner-loading.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/app/index.js","components/app/app.js","index.js"],"names":["Logo","place","logoStyle","className","SpinnerButton","id","Login","state","form","login","caption","type","placeholder","extra","value","validation","isValid","required","mask","sublogin","password","submitHandler","e","preventDefault","setAuth","props","validateControl","onValueChange","target","name","newForm","isEmpty","trimLeft","test","setState","loginCheck","passwordCheck","isValidLogin","email","isValidPassword","this","Object","keys","map","index","styleInput","key","onChange","param","isLoginError","messageError","isLoginSpinner","boxError","icon","mehO","size","textButton","buttonDisabled","Fragment","onSubmit","inputs","disabled","href","rel","Component","MainHeader","setFullscreen","isFull","onLogout","paramLogin","onClick","logout","ic_fullscreen_exit","ic_fullscreen","MainHistory","hisItem","statusDropdown","cleanHistory","doHisItem","hisBlock","React","createRef","hisListItem","action","styleItem","styleToast","isSwitchToCopy","visibility","transition","transitionTimingFunction","top","opacity","ic_more_vert","stopPropagation","X","pageX","left","current","clientHeight","valueItem","style","ref","onWheel","delta","deltaY","detail","wheelDelta","scrollLeft","title","ic_clear","editResize","paramResize","resizeListener","newFlexBasis","flexBasis","setRatio","ratio","getComputedStyle","document","getElementsByClassName","localStorage","setItem","MainEditor","onChangeValue","paramEditors","useEffect","getItem","toSend","toReceive","classEditorToSend","classEditorToReceive","classLabelToSend","classLabelToReceive","onMouseMove","onMouseUp","error","plainText","valueText","onMouseDown","parseInt","readOnly","HistoryDropdown","deleteHisItem","setClipboard","MainFooter","onSendToServer","setFormat","mark","useState","setTextButton","Main","paramDropdown","updateHisItem","newHisItem","idx","findIndex","el","newArray","slice","JSON","stringify","isExecute","executeHisItem","removeItem","navigator","clipboard","writeText","then","catch","parse","prevProps","prevState","snapshot","prevTimestamp","editors","timestamp","enabled","t","formatJsonString","str","text","replace","result","deep","tab","char","isAfter","resultChar","j","i","length","isJsonString","SpinnerLoading","ErrorIndicator","ic_sentiment_neutral","App","status","hasError","isReady","sendsay","Sendsay","cookies","Cookies","loginAuth","subloginAuth","passwd","performRequest","session","setSession","set","loginSession","subloginSession","explain","setStatusLoginError","request","res","textRes","updateEditors","textError","toString","indexOf","remove","isError","trim","newValue","toValue","Date","now","sendaySession","get","list","newLogin","errorInfo","formLogin","main","loading","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f72a76b6.chunk.js","sourcesContent":["import Logo from \"./logo\";\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './logo.css';\r\n\r\nconst Logo = ({place}) => {\r\n    const logoStyle = `logo logo_place_${place}`;\r\n    return (\r\n        <div className={logoStyle}>\r\n            <div className=\"logo__circle\"></div>\r\n            <div className=\"logo__rectangle\"></div>\r\n            <div className=\"logo__circle\"></div>\r\n            <div className=\"logo__rectangle logo__rectangle_shape_tr\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import SpinnerButton from \"./spinner-button\";\r\n\r\nexport default SpinnerButton;","import React from 'react';\r\nimport './spinner-button.css';\r\n\r\nconst SpinnerButton = () => {\r\n    return (\r\n        <div id=\"floatingBarsG\">\r\n            <div className=\"blockG\" id=\"rotateG_01\"></div>\r\n            <div className=\"blockG\" id=\"rotateG_02\"></div>\r\n            <div className=\"blockG\" id=\"rotateG_03\"></div>\r\n            <div className=\"blockG\" id=\"rotateG_04\"></div>\r\n            <div className=\"blockG\" id=\"rotateG_05\"></div>\r\n            <div className=\"blockG\" id=\"rotateG_06\"></div>\r\n            <div className=\"blockG\" id=\"rotateG_07\"></div>\r\n            <div className=\"blockG\" id=\"rotateG_08\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpinnerButton;","import Login from \"./login\";\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './login.css';\r\nimport Logo from \"../logo\";\r\nimport { email }  from 'is_js';\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { mehO } from 'react-icons-kit/fa'\r\nimport SpinnerButton from \"../spinner/spinner-button\";\r\n\r\nexport default class Login extends Component {\r\n\r\n    state = {\r\n        form:{\r\n            login: {\r\n                caption:'Логин',\r\n                type: 'text',\r\n                placeholder: 'iamyourlogin@domain.xyz',\r\n                extra:'',\r\n                value:'',\r\n                validation: {\r\n                    isValid: true,\r\n                    required: true,\r\n                    mask: /^[a-zA-Z0-9@_\\\\.]+$/\r\n                }\r\n            },\r\n            sublogin: {\r\n                caption:'Сублогин',\r\n                type: 'text',\r\n                placeholder: 'sublogin-could-be-here',\r\n                extra:'Опционально',\r\n                value:'',\r\n                validation: {\r\n                    isValid: true,\r\n                    required: false,\r\n                    mask: /^.+$/\r\n                }\r\n            },\r\n            password: {\r\n                caption:'Пароль',\r\n                type: 'password',\r\n                placeholder: '••••••••••••••••••••••',\r\n                extra:'',\r\n                value:'',\r\n                validation: {\r\n                    isValid: true,\r\n                    required: true,\r\n                    mask: /^[^а-яА-Я]+$/\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const { setAuth } = this.props;\r\n        const { login, sublogin, password } = this.state.form;\r\n\r\n        if (this.validateControl(login.value, password.value))\r\n            setAuth(login.value, sublogin.value, password.value);\r\n    }\r\n\r\n    validateControl(loginCheck, passwordCheck) {\r\n\r\n        const isValidLogin = (email(loginCheck) || /^[a-zA-Z0-9_]+$/.test(loginCheck)) && loginCheck!=='';\r\n        const isValidPassword = passwordCheck!=='';\r\n        const isValid = isValidLogin && isValidPassword;\r\n        if (isValid) return true;\r\n        const { login , password } = { ...this.state.form }\r\n        const newForm = {\r\n            ...this.state.form,\r\n            login: {\r\n                ...login,\r\n                validation: {\r\n                    ...login.validation,\r\n                    isValid: isValidLogin\r\n                }\r\n            },\r\n            password: {\r\n                ...password,\r\n                validation: {\r\n                    ...password.validation,\r\n                    isValid: isValidPassword\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            form: newForm\r\n        })\r\n        return false;\r\n    }\r\n\r\n    onValueChange = ({target}) => {\r\n\r\n        const { name, value } = target;\r\n        const newForm = { ...this.state.form };\r\n        const { mask, required } = newForm[name].validation;\r\n        const isEmpty = value.trimLeft()==='';\r\n\r\n        newForm[name] = {\r\n            ...newForm[name],\r\n            value,\r\n            validation: {\r\n                ...newForm[name].validation,\r\n                isValid: !isEmpty || !required\r\n            }\r\n        };\r\n        if (mask.test(value) || isEmpty) {\r\n            this.setState({\r\n                form:newForm\r\n            })\r\n        }\r\n    }\r\n\r\n    inputs() {\r\n        return Object.keys(this.state.form).map((name, index) => {\r\n            const { caption, extra, type, placeholder, value, validation} = this.state.form[name];\r\n\r\n            const styleInput = validation.isValid   ? \"form__input\"\r\n                                                    : \"form__input form__input_valid_error\";\r\n\r\n            return (\r\n                <div className='form__frame' key={index}>\r\n                    <label className='form__caption'>\r\n                        {caption}\r\n                    </label>\r\n                    <span className='form__caption form__caption_size_sm'>{extra}</span>\r\n                   <input  className={styleInput}\r\n                           type={type}\r\n                           placeholder={placeholder}\r\n                           name={name}\r\n                           value={value}\r\n                           onChange={this.onValueChange}\r\n                    />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isLoginError, messageError, isLoginSpinner } = this.props.param;\r\n\r\n        const { form } = this.state;\r\n\r\n        const { login, sublogin, password } = form;\r\n\r\n        const boxError = isLoginError ? (\r\n            <div className=\"form__boxError\">\r\n                <div className=\"form__blockError\">\r\n                    <p><Icon\r\n                        icon={mehO}\r\n                        size={30}\r\n                    /><span className=\"form__blockError_margin_10\">Вход не вышел</span></p>\r\n                    <span className=\"form__blockError_size_sm\">{messageError}</span>\r\n                </div>\r\n            </div>\r\n        ) : null;\r\n\r\n        const textButton = isLoginSpinner ? <SpinnerButton /> : <span>Войти</span>\r\n        const buttonDisabled =  !(login.validation.isValid &&\r\n                                sublogin.validation.isValid &&\r\n                                password.validation.isValid);\r\n        return (\r\n            <React.Fragment>\r\n                <Logo\r\n                    place=\"login\"\r\n                />\r\n                <div className=\"login\">\r\n                    <form\r\n                        className=\"form\"\r\n                        onSubmit={this.submitHandler}\r\n                    >\r\n                        <label className=\"form__label\">API-консолька</label>\r\n                        { boxError }\r\n\r\n                        { this.inputs() }\r\n                        <div className=\"form__frame\">\r\n                            <button\r\n                                className=\"form__submit\"\r\n                                type=\"submit\"\r\n                                disabled={buttonDisabled}\r\n                            >\r\n                                { textButton }\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"myLink\">\r\n                        <a href=\"https://github.com/Lavoche\" className=\"footer__link\" target=\"_blank\" rel=\"noopener noreferrer\"> github.com/Lavoche </a>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import MainHeader from \"./main-header\";\r\n\r\nexport default MainHeader;","import React from 'react';\r\nimport './main-header.css';\r\nimport Logo from \"../../logo\";\r\nimport {Icon} from \"react-icons-kit\";\r\nimport {logout} from \"react-icons-kit/ikons\";\r\nimport {ic_fullscreen, ic_fullscreen_exit} from \"react-icons-kit/md\";\r\n\r\nconst MainHeader = ({setFullscreen, isFull, onLogout, paramLogin}) => {\r\n\r\n    const { login, sublogin } = paramLogin;\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <Logo\r\n                    place=\"main\"\r\n                />\r\n                <span className=\"header__label\">API-консолька</span>\r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <div className=\"header__info\">\r\n                    <span className=\"header__text\">{login} : {sublogin}</span>\r\n                </div>\r\n                <div\r\n                    className=\"header__action\"\r\n                    onClick={()=>onLogout()}\r\n                >\r\n                    <span className=\"header__text\">Выход</span>\r\n                    <Icon\r\n                        icon={logout}\r\n                        size={30}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"header__action\"\r\n                    onClick={setFullscreen}\r\n                >\r\n                <Icon\r\n                    icon={isFull ? ic_fullscreen_exit : ic_fullscreen}\r\n                    size={30}\r\n                />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainHeader;","import MainHistory from \"./main-history\";\r\n\r\nexport default MainHistory;","import React from 'react';\r\nimport './main-history.css';\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { ic_more_vert, ic_clear } from \"react-icons-kit/md\";\r\n\r\n\r\nconst MainHistory = ({hisItem, statusDropdown, cleanHistory, doHisItem}) => {\r\n\r\n    const hisBlock = React.createRef();\r\n\r\n    const hisListItem = hisItem.map(({isValid, action, id, value, isSwitchToCopy})=> {\r\n        const styleItem = isValid ? \"history__status history__status_color_green\"\r\n            : \"history__status history__status_color_red\"\r\n        let styleToast = isSwitchToCopy ? {\r\n            visibility:\"visible\",\r\n            transition: \"1.5s\",\r\n            transitionTimingFunction: \"ease-in\",\r\n            top: \"-10px\",\r\n            opacity: \"0\"\r\n        } : null;\r\n\r\n        return (\r\n            <li\r\n                className=\"history__list-item\"\r\n                key={id}\r\n                onClick={()=>doHisItem(false,id)}\r\n            >\r\n                <span className={styleItem}/>\r\n                <span className=\"history__text\">{action}</span>\r\n                <Icon\r\n                    className=\"icon-points\"\r\n                    icon={ic_more_vert}\r\n                    size={30}\r\n                    onClick={(e)=>{\r\n                        e.stopPropagation();\r\n                        const X = e.pageX < 140 ? 140 : e.pageX;\r\n                        statusDropdown({\r\n                            visibility: \"visible\",\r\n                            left: X,\r\n                            top: hisBlock.current.clientHeight,\r\n                            id,\r\n                            valueItem: value\r\n                        });\r\n                    }}\r\n                />\r\n                <span\r\n                    className=\"history__toast\"\r\n                    style={styleToast}\r\n                >\r\n                    Скопировано\r\n                </span>\r\n\r\n\r\n\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"history\">\r\n\r\n            <ul\r\n                className=\"history__list-group\"\r\n                ref={hisBlock}\r\n                onWheel={(e)=>{\r\n                    const delta = e.deltaY || e.detail || e.wheelDelta;\r\n                    hisBlock.current.scrollLeft += delta*15;\r\n                }}\r\n            >\r\n                {hisListItem}\r\n            </ul>\r\n            <div className=\"history__gradient\"/>\r\n            <div\r\n                className=\"history__clean\"\r\n                onClick={cleanHistory}\r\n                title=\"Очистить историю\"\r\n            >\r\n                <Icon\r\n                    icon={ic_clear}\r\n                    size={35}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainHistory;","import React, { useEffect } from 'react';\r\nimport './main-editor.css';\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { ic_more_vert } from \"react-icons-kit/md\";\r\n\r\nconst editResize = React.createRef();\r\n\r\nlet paramResize = null;\r\n\r\nconst MainEditor = ({ onChangeValue, paramEditors, paramLogin }) => {\r\n\r\n    const { login, sublogin } = paramLogin;\r\n\r\n    useEffect(() => {\r\n        const ratio = localStorage.getItem(`ratio_${login}_${sublogin}`);\r\n        editResize.current.style.flexBasis = ratio || \"50%\"\r\n    },[login, sublogin]);\r\n\r\n    const { toSend, toReceive } = paramEditors;\r\n\r\n    const classEditorToSend = toSend.isValid ? \"editor__area\"\r\n                                            : \"editor__area editor__area_error\";\r\n    const classEditorToReceive = toReceive.isValid ? \"editor__area\"\r\n                                                    : \"editor__area editor__area_error\";\r\n    const classLabelToSend = toSend.isValid ? \"editor__label\"\r\n                                            : \"editor__label editor__label_error\";\r\n    const classLabelToReceive = toReceive.isValid ? \"editor__label\"\r\n                                            : \"editor__label editor__label_error\";\r\n    return (\r\n        <div className=\"editor\">\r\n            <div\r\n                className=\"editor__fields\"\r\n                onMouseMove={(e) => resizeListener(e)}\r\n                onMouseUp={() => setRatio(login, sublogin)}\r\n            >\r\n                <div className=\"editor__block editor__send\" ref={editResize}>\r\n                    <span className={classLabelToSend}>Запрос:</span>\r\n                    <textarea\r\n                        onChange={(e)=>onChangeValue({error: null, plainText: e.target.value})}\r\n                        value={toSend.valueText}\r\n                        className={classEditorToSend}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"editor__resize\"\r\n                    onMouseDown={(e)=> {\r\n                        const flexBasis = parseInt(getComputedStyle(document.getElementsByClassName(\"editor__send\")[0]).flexBasis);\r\n                        paramResize = flexBasis/e.pageX;\r\n                    }}\r\n                >\r\n                    <Icon\r\n                        className=\"icon-points icon-points_cursor_resize\"\r\n                        icon={ic_more_vert}\r\n                        size={30}\r\n                    />\r\n                </div>\r\n                <div className=\"editor__block editor__reсeive\">\r\n                    <span className={classLabelToReceive}>Ответ:</span>\r\n                    <textarea\r\n                        className={classEditorToReceive}\r\n                        value={toReceive.valueText}\r\n                        readOnly\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst resizeListener = (e) => {\r\n    if (paramResize) {\r\n        const newFlexBasis = e.pageX * paramResize;\r\n        if (newFlexBasis>10 && newFlexBasis<90)\r\n            editResize.current.style.flexBasis = `${newFlexBasis}%`;\r\n    }\r\n}\r\n\r\nconst setRatio = (login, sublogin) => {\r\n    const ratio = getComputedStyle(document.getElementsByClassName(\"editor__send\")[0]).flexBasis;\r\n    localStorage.setItem(`ratio_${login}_${sublogin}`, ratio);\r\n    paramResize = null;\r\n}\r\n\r\nexport default MainEditor;","import MainEditor from \"./main-editor\";\r\n\r\n\r\nexport default MainEditor;","import HistoryDropdown from \"./history-dropdown\";\r\n\r\nexport default HistoryDropdown;","import React from 'react';\r\nimport './history-dropdown.css';\r\n\r\nconst HistoryDropdown = ({ param, deleteHisItem, doHisItem, setClipboard }) => {\r\n\r\n    return (\r\n        <div className=\"history__dropdown\" style={param}>\r\n            <ul className=\"list-group\">\r\n                <li\r\n                    className=\"list-item list-item_color_blue\"\r\n                    onClick={()=>doHisItem(true)}\r\n                >\r\n                    <span>Выполнить</span>\r\n                </li>\r\n                <li\r\n                    className=\"list-item list-item_color_blue\"\r\n                    onClick={setClipboard}\r\n                ><span>Скопировать</span></li>\r\n                <li className=\"list-separator\"></li>\r\n                <li\r\n                    className=\"list-item list-item_color_red\"\r\n                    onClick={deleteHisItem}\r\n                ><span>Удалить</span></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HistoryDropdown;","import MainFooter from \"./main-footer\";\r\n\r\n\r\nexport default MainFooter;","import React, { useEffect, useState } from 'react';\r\nimport './main-footer.css';\r\nimport SpinnerButton from \"../../spinner/spinner-button\";\r\n\r\n\r\nconst MainFooter = ({buttonDisabled, onSendToServer, setFormat, mark}) => {\r\n\r\n    const [textButton, setTextButton ] = useState('Отправить');\r\n\r\n    useEffect(()=>{\r\n           setTextButton('Отправить');\r\n    },[mark.mark]);\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer__block\">\r\n                <button type=\"button\"\r\n                        className=\"footer__btn\"\r\n                        onClick={() => {\r\n                            !mark.isEmpty && setTextButton(<SpinnerButton />);\r\n                            onSendToServer();\r\n                        }}\r\n                        disabled={buttonDisabled}\r\n                >\r\n                    {textButton}\r\n                </button>\r\n            </div>\r\n            <div className=\"footer__block footer__block_align_center\">\r\n                <a href=\"https://github.com/Lavoche\" className=\"footer__link\" target=\"_blank\" rel=\"noopener noreferrer\"> github.com/Lavoche </a>\r\n            </div>\r\n            <div className=\"footer__block\">\r\n                <span\r\n                    className=\"footer__format\"\r\n                    onClick={setFormat}\r\n                >\r\n                    <i className=\"footer__format-icon\"/>\r\n                    <span className=\"footer__format-text\">Форматировать</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainFooter;","import Main from \"./main\";\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport './main.css';\r\nimport FullScreen from \"react-full-screen\";\r\nimport MainHeader from \"./main-header\";\r\nimport MainHistory from \"./main-history\";\r\nimport MainEditor from \"./main-editor\";\r\nimport HistoryDropdown from \"./main-history/history-dropdown\";\r\nimport MainFooter from \"./main-footer\";\r\n\r\n\r\nexport  default class Main extends Component{\r\n\r\n    state = {\r\n        isFull: false,\r\n        hisItem:[],\r\n        paramDropdown:{\r\n            visibility: \"hidden\",\r\n            top: 5,\r\n            left: 500,\r\n            id: '',\r\n            valueItem:''\r\n        },\r\n    }\r\n\r\n    setFullscreen = () => {\r\n        this.setState({ isFull: !this.state.isFull });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { login, sublogin } = this.props;\r\n        let hisItem = localStorage.getItem(`hisItem_${login}_${sublogin}`);\r\n        hisItem = hisItem ? JSON.parse(hisItem) : [];\r\n        this.setState({\r\n            hisItem\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        const prevTimestamp = prevProps.editors.toReceive.timestamp;\r\n        const { timestamp, isValid}  = this.props.editors.toReceive;\r\n\r\n\r\n        const { value, valueText } = this.props.editors.toSend;\r\n        if ((prevTimestamp !== timestamp) && value['action']) {\r\n            this.updateHisItem(timestamp, isValid, value['action'], valueText);\r\n        }\r\n    }\r\n\r\n    updateHisItem = (id, isValid, action, value) => {\r\n        const { login, sublogin } = this.props;\r\n        const newHisItem = {\r\n            id,\r\n            isValid,\r\n            action,\r\n            value,\r\n            isSwitchToCopy: false\r\n        }\r\n        this.setState(({hisItem}) => {\r\n            const idx = hisItem.findIndex((el) => el.action===action);\r\n            const newArray = idx === -1     ? [newHisItem, ...hisItem].slice(0, 20)\r\n                                            : [newHisItem, ...hisItem.slice(0, idx), ...hisItem.slice(idx+1)].slice(0, 20)\r\n            localStorage.setItem(`hisItem_${login}_${sublogin}`, JSON.stringify(newArray));\r\n            return {\r\n                hisItem: newArray\r\n            }\r\n        });\r\n    }\r\n\r\n    doHisItem = (isExecute, id = this.state.paramDropdown.id) => {\r\n        const idx = this.state.hisItem.findIndex((el) => el.id===id);\r\n        this.props.executeHisItem(isExecute, this.state.hisItem[idx].value);\r\n    }\r\n\r\n    deleteHisItem = () => {\r\n        const id = this.state.paramDropdown.id;\r\n        const { login, sublogin } = this.props;\r\n\r\n        this.setState(({hisItem}) => {\r\n            const idx = hisItem.findIndex((el) => el.id===id);\r\n            const newArray = [\r\n                ...hisItem.slice(0, idx),\r\n                ...hisItem.slice(idx+1)\r\n            ]\r\n            localStorage.setItem(`hisItem_${login}_${sublogin}`, JSON.stringify(newArray));\r\n            return {\r\n                hisItem: newArray\r\n            }\r\n        })\r\n    }\r\n\r\n    statusDropdown = (param) => {\r\n        this.setState({\r\n            paramDropdown: param\r\n        })\r\n    }\r\n\r\n    cleanHistory = () => {\r\n        const { login, sublogin } = this.props;\r\n        localStorage.removeItem(`hisItem_${login}_${sublogin}`);\r\n        this.setState({\r\n            hisItem:[]\r\n        })\r\n    }\r\n\r\n    setClipboard = () => {\r\n\r\n        navigator.clipboard.writeText(this.state.paramDropdown.valueItem)\r\n            .then(() => {\r\n                this.setState(({hisItem})=> {\r\n                    const id = this.state.paramDropdown.id;\r\n                    const newArray = [...hisItem].map((el)=>{\r\n                        return {\r\n                            ...el,\r\n                            isSwitchToCopy: el.id===id\r\n                        }\r\n                    });\r\n                    return {\r\n                        hisItem: newArray\r\n                    }\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState(({hisItem})=> {\r\n                    const newArray = [...hisItem].map((el)=>{\r\n                        return {\r\n                            ...el,\r\n                            isSwitchToCopy: false\r\n                        }\r\n                    });\r\n                    return {\r\n                        hisItem: newArray\r\n                    }\r\n                })\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {isFull, hisItem, paramDropdown } = this.state;\r\n        const { onSendToServer, onChangeValue, editors, onLogout, paramLogin, setFormat} = this.props;\r\n\r\n        return (\r\n            <FullScreen\r\n                enabled={isFull}\r\n                onChange={isFull => this.setState({isFull})}\r\n            >\r\n                <div\r\n                    className=\"main\"\r\n                    onClick={()=>{\r\n                        if (paramDropdown.visibility===\"visible\"){\r\n                            const t = {...paramDropdown, visibility: \"hidden\"};\r\n                            this.setState({\r\n                                paramDropdown: t\r\n                            })\r\n                        }\r\n                     }}\r\n                >\r\n                    <MainHeader\r\n                        setFullscreen={this.setFullscreen}\r\n                        isFull={isFull}\r\n                        onLogout={onLogout}\r\n                        paramLogin={paramLogin}\r\n                    />\r\n                    <MainHistory\r\n                        hisItem={hisItem}\r\n                        statusDropdown={this.statusDropdown}\r\n                        cleanHistory={this.cleanHistory}\r\n                        doHisItem={this.doHisItem}\r\n                    />\r\n                    <MainEditor\r\n                        onChangeValue={onChangeValue}\r\n                        paramEditors={editors}\r\n                        paramLogin={this.props.paramLogin}\r\n                    />\r\n                    <MainFooter\r\n                        buttonDisabled={!editors.toSend.isValid}\r\n                        onSendToServer={onSendToServer}\r\n                        setFormat={setFormat}\r\n                        mark={{isEmpty: editors.toSend.valueText==='', mark: editors.toReceive.timestamp}}\r\n                    />\r\n                <HistoryDropdown\r\n                    param={paramDropdown}\r\n                    deleteHisItem={this.deleteHisItem}\r\n                    doHisItem={this.doHisItem}\r\n                    setClipboard={this.setClipboard}\r\n                />\r\n                </div>\r\n            </FullScreen>\r\n        )\r\n    }\r\n}","export const formatJsonString = (str) => {\r\n\r\n    const text =  str.replace(/\\s+/g,'');\r\n\r\n    let result = '';\r\n    let deep = 0;\r\n\r\n    const tab = (deep, char, isAfter) => {\r\n        let resultChar = isAfter ? char+'\\n' : '\\n'+ char;\r\n        for (let j =0; j < deep; j++) {\r\n            resultChar = isAfter ? resultChar+'\\t' : resultChar.slice(0, 1)+'\\t'+resultChar.slice(1);\r\n        }\r\n        return resultChar\r\n    }\r\n    for (let i=0; i<text.length; i++) {\r\n\r\n        switch (text[i]){\r\n            case \"[\":\r\n            case \"{\":\r\n                deep++;\r\n                result += tab(deep, text[i], true);\r\n                break;\r\n            case \"]\":\r\n            case \"}\":\r\n                deep--;\r\n                result += tab(deep, text[i], false);\r\n                break;\r\n            case \",\":\r\n                result += tab(deep, text[i], true);\r\n                break;\r\n            case \":\":\r\n                result += ` ${text[i]} `;\r\n                break;\r\n            default :\r\n                result += text[i];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const isJsonString = (str) => {\r\n    try {\r\n        return JSON.parse(str);\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}","import SpinnerLoading from \"./spinner-loading\";\r\n\r\nexport default SpinnerLoading;","import React from 'react';\r\nimport './spinner-loading.css';\r\n\r\nconst SpinnerLoading = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-double-ring-3n9ttbrc1tr\">\r\n            <div className=\"ldio-up8zhtqpmel\">\r\n                <div></div>\r\n                <div></div>\r\n                <div>\r\n                    <div></div>\r\n                </div>\r\n                <div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpinnerLoading;","import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\nimport Icon from 'react-icons-kit';\r\nimport { ic_sentiment_neutral } from 'react-icons-kit/md/ic_sentiment_neutral';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error\">\r\n            <Icon\r\n                icon={ic_sentiment_neutral}\r\n                size={160}\r\n            />\r\n            <span className=\"error__boom\">\r\n                Что-то пошло не так!\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import App from \"./app\";\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport Sendsay from \"sendsay-api\";\r\nimport 'isomorphic-fetch';\r\nimport './app.css';\r\nimport Login from \"../login\";\r\nimport Main from \"../main\";\r\nimport Cookies from 'universal-cookie';\r\nimport { formatJsonString, isJsonString } from '../../service/json-lib'\r\nimport SpinnerLoading from \"../spinner/spinner-loading\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        login: {\r\n            status: false,\r\n            login:'',\r\n            sublogin:'',\r\n            isLoginError: false,\r\n            messageError:''\r\n        },\r\n        hasError:false,\r\n        isReady:false,\r\n        editors: {\r\n            toSend:{\r\n                value:{},\r\n                valueText:'',\r\n                isValid: true,\r\n                timestamp:\"0\"\r\n            },\r\n            toReceive:{\r\n                value:{},\r\n                valueText:'',\r\n                isValid: true,\r\n                timestamp:\"0\"\r\n            }\r\n        },\r\n        isLoginSpinner: false\r\n    }\r\n\r\n    sendsay = new Sendsay();\r\n    cookies = new Cookies();\r\n\r\n    setAuth = (loginAuth, subloginAuth, passwd) => {\r\n\r\n        this.setState({\r\n            isLoginSpinner: true\r\n        })\r\n\r\n        this.sendsay.performRequest({\r\n            action: 'login',\r\n            login: loginAuth,\r\n            sublogin: subloginAuth,\r\n            passwd,\r\n        }).then(({ session, login,  sublogin}) => {\r\n            this.sendsay.setSession(session);\r\n            if (!subloginAuth)  sublogin=null;\r\n            this.cookies.set('sendsay_session', {session, loginSession: login, subloginSession: sublogin});\r\n            this.setState(()=> {\r\n                const newLogin = {\r\n                    status: true,\r\n                    login,\r\n                    sublogin,\r\n                    isLoginError: false,\r\n                    messageError:''\r\n                }\r\n                return {\r\n                    login:newLogin,\r\n                    isReady: true,\r\n                    isLoginSpinner: false\r\n                }\r\n            })\r\n        }).catch(({ id,  explain}) => {\r\n            this.setStatusLoginError(id, explain);\r\n        });\r\n    }\r\n\r\n    setStatusLoginError = (id, explain)  => {\r\n        this.setState( ({ login }) => {\r\n            const newLogin = {\r\n                ...login,\r\n                isLoginError: true,\r\n                messageError: `{id:\"${id}\", explain:\"${explain}\"}`\r\n            }\r\n            return {\r\n                login: newLogin,\r\n                isLoginSpinner: false\r\n            }\r\n        })\r\n    }\r\n\r\n    executeHisItem = (isExecute, valueText) => {\r\n        this.setState(({editors}) => {\r\n            const newEditors = {\r\n                ...editors,\r\n                toSend: {\r\n                    ...editors.toSend,\r\n                    value: JSON.parse(valueText),\r\n                    valueText: formatJsonString(valueText),\r\n                    isValid: true\r\n                }\r\n            };\r\n            return {\r\n                editors: newEditors\r\n            }\r\n        }, ()=>{\r\n            return isExecute ? this.onSendToServer(valueText) : null;\r\n        });\r\n    }\r\n\r\n    onSendToServer = (valueText = this.state.editors.toSend.valueText) => {\r\n        if (!valueText) return;\r\n        const value = JSON.parse(valueText);\r\n        this.sendsay.request(value)\r\n            .then((res) => {\r\n                const textRes = formatJsonString(JSON.stringify(res));\r\n                this.updateEditors ('receive', true, textRes, res)\r\n            })\r\n            .catch((e) => {\r\n                const { id, explain } = e;\r\n                if (explain === 'expired') {\r\n                    return this.onLogout(true, `{id:\"${id}\", explain:\"${explain}\"}`);\r\n                }\r\n                const textError = e.toString().indexOf('Failed to fetch')===-1\r\n                                                    ? formatJsonString(JSON.stringify(e))\r\n                                                    : e.toString();\r\n\r\n                this.updateEditors ('receive', false, textError, e)\r\n            })\r\n    }\r\n\r\n    onLogout = (isLoginError= false, messageError = '') => {\r\n        this.sendsay.request(\r\n            {\"action\" : \"logout\"}\r\n        ).then(()=> {\r\n            this.cookies.remove('sendsay_session');\r\n\r\n            this.setState(() => {\r\n                const newEditors = {\r\n                                    toSend:{\r\n                                        value:{},\r\n                                        isValid: true,\r\n                                        timestamp:\"0\"\r\n                                    },\r\n                                    toReceive:{\r\n                                        value:{},\r\n                                        isValid: true,\r\n                                        timestamp:\"0\"\r\n                                    }\r\n                                };\r\n                const newLogin = {\r\n                    status: false,\r\n                    login:'',\r\n                    sublogin:'',\r\n                    isLoginError,\r\n                    messageError\r\n                }\r\n                return {\r\n                    login:newLogin,\r\n                    isError:false,\r\n                    isReady:true,\r\n                    editors: newEditors\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { cookies , sendsay } = this;\r\n        const sendaySession = cookies.get('sendsay_session');\r\n        if (sendaySession) {\r\n            const { session, loginSession, subloginSession  } = sendaySession;\r\n            sendsay.setSession(session);\r\n            sendsay.request({\r\n                action: 'sys.settings.get',\r\n                list: ['about.id']\r\n            }).then(()=>{\r\n                this.setState(({login})=> {\r\n                    const newLogin = {\r\n                        ...login,\r\n                        login: loginSession,\r\n                        sublogin: subloginSession,\r\n                        status: true\r\n                    }\r\n                    return {\r\n                        login:newLogin,\r\n                        isReady: true\r\n                    }\r\n                })\r\n            }).catch((e)=>{\r\n                if (e.explain==='expired') {\r\n                    this.setState( ({login}) => {\r\n                        const newLogin = {\r\n                            ...login,\r\n                            isLoginError: true,\r\n                            messageError: `{id:\"${e.id}\", explain:\"${e.explain}\"}`\r\n                        }\r\n                        this.cookies.remove('sendsay_session');\r\n                        return {\r\n                            login: newLogin,\r\n                            isReady: true\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        hasError: true\r\n                    })\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.setState( () => {\r\n                const newLogin = {\r\n                    status: false,\r\n                    login:'',\r\n                    sublogin:'',\r\n                    isLoginError: false,\r\n                    messageError:''\r\n\r\n                }\r\n                return {\r\n                    login: newLogin,\r\n                    isReady: true\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    onChangeValue = ({ error, plainText }) => {\r\n\r\n        if (!plainText || plainText.trim()==='') return this.updateEditors('send',true);\r\n        if (error) {\r\n            this.updateEditors('send', false);\r\n        }\r\n        else {\r\n            const newValue = isJsonString(plainText);\r\n            if (newValue)\r\n                this.updateEditors('send',true, plainText, newValue);\r\n            else\r\n                this.updateEditors('send',false, plainText);\r\n        }\r\n    }\r\n\r\n    updateEditors = (type, isValid, valueText= '', value = {}) => {\r\n\r\n        const name = type === 'send' ? 'toSend' : 'toReceive'\r\n\r\n        const toValue= {\r\n            value,\r\n            valueText,\r\n            isValid,\r\n            timestamp: Date.now().toString()\r\n        }\r\n        const editors = {...this.state.editors, [name]: toValue};\r\n        this.setState({\r\n            editors\r\n        })\r\n\r\n    }\r\n\r\n    setFormat = () =>{\r\n        this.setState(({editors})=>{\r\n            const newEditors ={\r\n                toSend: {\r\n                    ...editors.toSend,\r\n                    valueText: formatJsonString(editors.toSend.valueText)\r\n                },\r\n                toReceive: {\r\n                    ...editors.toReceive,\r\n                    valueText: formatJsonString(editors.toReceive.valueText)\r\n                }\r\n            }\r\n            return {\r\n                editors: newEditors\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            hasError:true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isReady, editors, isLoginSpinner, hasError } = this.state;\r\n        const { status, login, sublogin,  isLoginError, messageError} = this.state.login;\r\n\r\n        const formLogin = (!status && isReady) ? <Login\r\n                                                    setAuth={this.setAuth}\r\n                                                    param={{ isLoginError, messageError, isLoginSpinner }}\r\n                                                />\r\n                                            : null;\r\n        const main = (status && isReady) ? <Main\r\n                                                onSendToServer={this.onSendToServer}\r\n                                                onChangeValue={this.onChangeValue}\r\n                                                executeHisItem={this.executeHisItem}\r\n                                                editors={editors}\r\n                                                onLogout={this.onLogout}\r\n                                                paramLogin={{ login, sublogin }}\r\n                                                setFormat={this.setFormat}\r\n                                            />\r\n                                        : null;\r\n        const loading = !isReady && !hasError? <SpinnerLoading />\r\n                                : null;\r\n\r\n        const error = hasError? <ErrorIndicator />\r\n                                : null;\r\n        return (\r\n            <React.Fragment>\r\n                { formLogin }\r\n                { main }\r\n                { loading }\r\n                { error }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}